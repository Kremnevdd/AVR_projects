
UART GenHz.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  000003ee  00000482  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000003ee  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000d  00800106  00800106  00000488  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000488  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000004b8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  000004f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000078f  00000000  00000000  00000530  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000066e  00000000  00000000  00000cbf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000002fa  00000000  00000000  0000132d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000009c  00000000  00000000  00001628  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000398  00000000  00000000  000016c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000cb  00000000  00000000  00001a5c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  00001b27  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 9a 00 	jmp	0x134	; 0x134 <__vector_18>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee ee       	ldi	r30, 0xEE	; 238
  7c:	f3 e0       	ldi	r31, 0x03	; 3
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 30       	cpi	r26, 0x06	; 6
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a6 e0       	ldi	r26, 0x06	; 6
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a3 31       	cpi	r26, 0x13	; 19
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 8d 00 	call	0x11a	; 0x11a <main>
  9e:	0c 94 f5 01 	jmp	0x3ea	; 0x3ea <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <timer_setup>:
 volatile long int freq = 2;
volatile char i=0;
long int delay;
volatile char recieve=0;
void timer_setup(){
DDRB|= (1<<PORTB1);	
  a6:	21 9a       	sbi	0x04, 1	; 4
TCCR1A|= (1<< COM1A0);
  a8:	e0 e8       	ldi	r30, 0x80	; 128
  aa:	f0 e0       	ldi	r31, 0x00	; 0
  ac:	80 81       	ld	r24, Z
  ae:	80 64       	ori	r24, 0x40	; 64
  b0:	80 83       	st	Z, r24
TCCR1B |= (1<< CS12)|(1<<CS10)|(1<<WGM12);
  b2:	e1 e8       	ldi	r30, 0x81	; 129
  b4:	f0 e0       	ldi	r31, 0x00	; 0
  b6:	80 81       	ld	r24, Z
  b8:	8d 60       	ori	r24, 0x0D	; 13
  ba:	80 83       	st	Z, r24
OCR1A = (F_CPU/(freq*2*1024)-1);
  bc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
  c0:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
  c4:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
  c8:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
  cc:	9c 01       	movw	r18, r24
  ce:	ad 01       	movw	r20, r26
  d0:	01 2e       	mov	r0, r17
  d2:	1b e0       	ldi	r17, 0x0B	; 11
  d4:	22 0f       	add	r18, r18
  d6:	33 1f       	adc	r19, r19
  d8:	44 1f       	adc	r20, r20
  da:	55 1f       	adc	r21, r21
  dc:	1a 95       	dec	r17
  de:	d1 f7       	brne	.-12     	; 0xd4 <timer_setup+0x2e>
  e0:	10 2d       	mov	r17, r0
  e2:	60 e0       	ldi	r22, 0x00	; 0
  e4:	74 e2       	ldi	r23, 0x24	; 36
  e6:	84 ef       	ldi	r24, 0xF4	; 244
  e8:	90 e0       	ldi	r25, 0x00	; 0
  ea:	0e 94 92 01 	call	0x324	; 0x324 <__divmodsi4>
  ee:	21 50       	subi	r18, 0x01	; 1
  f0:	31 09       	sbc	r19, r1
  f2:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
  f6:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
  fa:	08 95       	ret

000000fc <UART_setup>:
	
}


void UART_setup (){
	UCSR0B |= (1<<TXEN0)|(1<<RXEN0)|(1<<RXCIE0);
  fc:	e1 ec       	ldi	r30, 0xC1	; 193
  fe:	f0 e0       	ldi	r31, 0x00	; 0
 100:	80 81       	ld	r24, Z
 102:	88 69       	ori	r24, 0x98	; 152
 104:	80 83       	st	Z, r24
	UCSR0C |= (1<<UCSZ00)|(1<<UCSZ01);
 106:	e2 ec       	ldi	r30, 0xC2	; 194
 108:	f0 e0       	ldi	r31, 0x00	; 0
 10a:	80 81       	ld	r24, Z
 10c:	86 60       	ori	r24, 0x06	; 6
 10e:	80 83       	st	Z, r24
	UBRR0L = 103; // 16MHz: baudrate 9600
 110:	87 e6       	ldi	r24, 0x67	; 103
 112:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
	sei();
 116:	78 94       	sei
 118:	08 95       	ret

0000011a <main>:


int main(void)

{
  UART_setup();
 11a:	0e 94 7e 00 	call	0xfc	; 0xfc <UART_setup>
  timer_setup();
 11e:	0e 94 53 00 	call	0xa6	; 0xa6 <timer_setup>
  while(!(UCSR0A & (1<<UDRE0)));
 122:	e0 ec       	ldi	r30, 0xC0	; 192
 124:	f0 e0       	ldi	r31, 0x00	; 0
 126:	80 81       	ld	r24, Z
 128:	85 ff       	sbrs	r24, 5
 12a:	fd cf       	rjmp	.-6      	; 0x126 <main+0xc>
	 UDR0=0x33;
 12c:	83 e3       	ldi	r24, 0x33	; 51
 12e:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
 132:	ff cf       	rjmp	.-2      	; 0x132 <main+0x18>

00000134 <__vector_18>:
  {
	 
  }
}

ISR(USART_RX_vect){
 134:	1f 92       	push	r1
 136:	0f 92       	push	r0
 138:	0f b6       	in	r0, 0x3f	; 63
 13a:	0f 92       	push	r0
 13c:	11 24       	eor	r1, r1
 13e:	2f 93       	push	r18
 140:	3f 93       	push	r19
 142:	4f 93       	push	r20
 144:	5f 93       	push	r21
 146:	6f 93       	push	r22
 148:	7f 93       	push	r23
 14a:	8f 93       	push	r24
 14c:	9f 93       	push	r25
 14e:	af 93       	push	r26
 150:	bf 93       	push	r27
 152:	ef 93       	push	r30
 154:	ff 93       	push	r31
	
	byte[i]=UDR0;
 156:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <__data_end>
 15a:	f0 e0       	ldi	r31, 0x00	; 0
 15c:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
 160:	e5 5f       	subi	r30, 0xF5	; 245
 162:	fe 4f       	sbci	r31, 0xFE	; 254
 164:	80 83       	st	Z, r24
	i++;
 166:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__data_end>
 16a:	8f 5f       	subi	r24, 0xFF	; 255
 16c:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <__data_end>
	
	if (i==4){
 170:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__data_end>
 174:	84 30       	cpi	r24, 0x04	; 4
 176:	09 f0       	breq	.+2      	; 0x17a <__vector_18+0x46>
 178:	c4 c0       	rjmp	.+392    	; 0x302 <__vector_18+0x1ce>
		i=0;
 17a:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <__data_end>
		//recieve=1;
  		  memcpy(&freq,&byte,4);
 17e:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <byte>
 182:	90 91 0c 01 	lds	r25, 0x010C	; 0x80010c <byte+0x1>
 186:	a0 91 0d 01 	lds	r26, 0x010D	; 0x80010d <byte+0x2>
 18a:	b0 91 0e 01 	lds	r27, 0x010E	; 0x80010e <byte+0x3>
 18e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 192:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 196:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
 19a:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
			if ((freq<8000000) && (freq>122))
 19e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 1a2:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 1a6:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 1aa:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 1ae:	81 15       	cp	r24, r1
 1b0:	92 41       	sbci	r25, 0x12	; 18
 1b2:	aa 47       	sbci	r26, 0x7A	; 122
 1b4:	b1 05       	cpc	r27, r1
 1b6:	bc f4       	brge	.+46     	; 0x1e6 <__vector_18+0xb2>
 1b8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 1bc:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 1c0:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 1c4:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 1c8:	8b 37       	cpi	r24, 0x7B	; 123
 1ca:	91 05       	cpc	r25, r1
 1cc:	a1 05       	cpc	r26, r1
 1ce:	b1 05       	cpc	r27, r1
 1d0:	54 f0       	brlt	.+20     	; 0x1e6 <__vector_18+0xb2>
			{
			
				N=1;
 1d2:	81 e0       	ldi	r24, 0x01	; 1
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <N+0x1>
 1da:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <N>
				TCCR1B = (1<<CS10)|(1<<WGM12);
 1de:	89 e0       	ldi	r24, 0x09	; 9
 1e0:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
 1e4:	68 c0       	rjmp	.+208    	; 0x2b6 <__vector_18+0x182>
			}
			else if ((freq<1000000) && (freq> 15))
 1e6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 1ea:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 1ee:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 1f2:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 1f6:	80 34       	cpi	r24, 0x40	; 64
 1f8:	92 44       	sbci	r25, 0x42	; 66
 1fa:	af 40       	sbci	r26, 0x0F	; 15
 1fc:	b1 05       	cpc	r27, r1
 1fe:	b4 f4       	brge	.+44     	; 0x22c <__vector_18+0xf8>
 200:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 204:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 208:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 20c:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 210:	40 97       	sbiw	r24, 0x10	; 16
 212:	a1 05       	cpc	r26, r1
 214:	b1 05       	cpc	r27, r1
 216:	54 f0       	brlt	.+20     	; 0x22c <__vector_18+0xf8>
			{
				N=8;
 218:	88 e0       	ldi	r24, 0x08	; 8
 21a:	90 e0       	ldi	r25, 0x00	; 0
 21c:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <N+0x1>
 220:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <N>
				TCCR1B = (1<<CS11)|(1<<WGM12);
 224:	8a e0       	ldi	r24, 0x0A	; 10
 226:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
 22a:	45 c0       	rjmp	.+138    	; 0x2b6 <__vector_18+0x182>
			}
			else if ((freq <125000) && (freq> 2))
 22c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 230:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 234:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 238:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 23c:	88 34       	cpi	r24, 0x48	; 72
 23e:	98 4e       	sbci	r25, 0xE8	; 232
 240:	a1 40       	sbci	r26, 0x01	; 1
 242:	b1 05       	cpc	r27, r1
 244:	b4 f4       	brge	.+44     	; 0x272 <__vector_18+0x13e>
 246:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 24a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 24e:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 252:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 256:	03 97       	sbiw	r24, 0x03	; 3
 258:	a1 05       	cpc	r26, r1
 25a:	b1 05       	cpc	r27, r1
 25c:	54 f0       	brlt	.+20     	; 0x272 <__vector_18+0x13e>
			{ 
				N=64;
 25e:	80 e4       	ldi	r24, 0x40	; 64
 260:	90 e0       	ldi	r25, 0x00	; 0
 262:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <N+0x1>
 266:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <N>
				TCCR1B = (1<< CS11)|(1<<CS10)|(1<<WGM12);
 26a:	8b e0       	ldi	r24, 0x0B	; 11
 26c:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
 270:	22 c0       	rjmp	.+68     	; 0x2b6 <__vector_18+0x182>
			}
			else if ((freq< 31250) && (freq> 1))
 272:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 276:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 27a:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 27e:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 282:	82 31       	cpi	r24, 0x12	; 18
 284:	9a 47       	sbci	r25, 0x7A	; 122
 286:	a1 05       	cpc	r26, r1
 288:	b1 05       	cpc	r27, r1
 28a:	ac f4       	brge	.+42     	; 0x2b6 <__vector_18+0x182>
 28c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 290:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 294:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 298:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 29c:	02 97       	sbiw	r24, 0x02	; 2
 29e:	a1 05       	cpc	r26, r1
 2a0:	b1 05       	cpc	r27, r1
 2a2:	4c f0       	brlt	.+18     	; 0x2b6 <__vector_18+0x182>
			{
				N=256;
 2a4:	80 e0       	ldi	r24, 0x00	; 0
 2a6:	91 e0       	ldi	r25, 0x01	; 1
 2a8:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <N+0x1>
 2ac:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <N>
				TCCR1B = (1<< CS12)|(1<<WGM12);
 2b0:	8c e0       	ldi	r24, 0x0C	; 12
 2b2:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
			}
		  OCR1A = (F_CPU/(freq*2*N)-1);
 2b6:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__data_start>
 2ba:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__data_start+0x1>
 2be:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <__data_start+0x2>
 2c2:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <__data_start+0x3>
 2c6:	a0 91 04 01 	lds	r26, 0x0104	; 0x800104 <N>
 2ca:	b0 91 05 01 	lds	r27, 0x0105	; 0x800105 <N+0x1>
 2ce:	9a 01       	movw	r18, r20
 2d0:	ab 01       	movw	r20, r22
 2d2:	22 0f       	add	r18, r18
 2d4:	33 1f       	adc	r19, r19
 2d6:	44 1f       	adc	r20, r20
 2d8:	55 1f       	adc	r21, r21
 2da:	0e 94 b1 01 	call	0x362	; 0x362 <__mulshisi3>
 2de:	9b 01       	movw	r18, r22
 2e0:	ac 01       	movw	r20, r24
 2e2:	60 e0       	ldi	r22, 0x00	; 0
 2e4:	74 e2       	ldi	r23, 0x24	; 36
 2e6:	84 ef       	ldi	r24, 0xF4	; 244
 2e8:	90 e0       	ldi	r25, 0x00	; 0
 2ea:	0e 94 92 01 	call	0x324	; 0x324 <__divmodsi4>
 2ee:	21 50       	subi	r18, 0x01	; 1
 2f0:	31 09       	sbc	r19, r1
 2f2:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
 2f6:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
		  TCNT1 =0;
 2fa:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
 2fe:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
	}
 302:	ff 91       	pop	r31
 304:	ef 91       	pop	r30
 306:	bf 91       	pop	r27
 308:	af 91       	pop	r26
 30a:	9f 91       	pop	r25
 30c:	8f 91       	pop	r24
 30e:	7f 91       	pop	r23
 310:	6f 91       	pop	r22
 312:	5f 91       	pop	r21
 314:	4f 91       	pop	r20
 316:	3f 91       	pop	r19
 318:	2f 91       	pop	r18
 31a:	0f 90       	pop	r0
 31c:	0f be       	out	0x3f, r0	; 63
 31e:	0f 90       	pop	r0
 320:	1f 90       	pop	r1
 322:	18 95       	reti

00000324 <__divmodsi4>:
 324:	05 2e       	mov	r0, r21
 326:	97 fb       	bst	r25, 7
 328:	1e f4       	brtc	.+6      	; 0x330 <__divmodsi4+0xc>
 32a:	00 94       	com	r0
 32c:	0e 94 a9 01 	call	0x352	; 0x352 <__negsi2>
 330:	57 fd       	sbrc	r21, 7
 332:	07 d0       	rcall	.+14     	; 0x342 <__divmodsi4_neg2>
 334:	0e 94 b9 01 	call	0x372	; 0x372 <__udivmodsi4>
 338:	07 fc       	sbrc	r0, 7
 33a:	03 d0       	rcall	.+6      	; 0x342 <__divmodsi4_neg2>
 33c:	4e f4       	brtc	.+18     	; 0x350 <__divmodsi4_exit>
 33e:	0c 94 a9 01 	jmp	0x352	; 0x352 <__negsi2>

00000342 <__divmodsi4_neg2>:
 342:	50 95       	com	r21
 344:	40 95       	com	r20
 346:	30 95       	com	r19
 348:	21 95       	neg	r18
 34a:	3f 4f       	sbci	r19, 0xFF	; 255
 34c:	4f 4f       	sbci	r20, 0xFF	; 255
 34e:	5f 4f       	sbci	r21, 0xFF	; 255

00000350 <__divmodsi4_exit>:
 350:	08 95       	ret

00000352 <__negsi2>:
 352:	90 95       	com	r25
 354:	80 95       	com	r24
 356:	70 95       	com	r23
 358:	61 95       	neg	r22
 35a:	7f 4f       	sbci	r23, 0xFF	; 255
 35c:	8f 4f       	sbci	r24, 0xFF	; 255
 35e:	9f 4f       	sbci	r25, 0xFF	; 255
 360:	08 95       	ret

00000362 <__mulshisi3>:
 362:	b7 ff       	sbrs	r27, 7
 364:	0c 94 db 01 	jmp	0x3b6	; 0x3b6 <__muluhisi3>

00000368 <__mulohisi3>:
 368:	0e 94 db 01 	call	0x3b6	; 0x3b6 <__muluhisi3>
 36c:	82 1b       	sub	r24, r18
 36e:	93 0b       	sbc	r25, r19
 370:	08 95       	ret

00000372 <__udivmodsi4>:
 372:	a1 e2       	ldi	r26, 0x21	; 33
 374:	1a 2e       	mov	r1, r26
 376:	aa 1b       	sub	r26, r26
 378:	bb 1b       	sub	r27, r27
 37a:	fd 01       	movw	r30, r26
 37c:	0d c0       	rjmp	.+26     	; 0x398 <__udivmodsi4_ep>

0000037e <__udivmodsi4_loop>:
 37e:	aa 1f       	adc	r26, r26
 380:	bb 1f       	adc	r27, r27
 382:	ee 1f       	adc	r30, r30
 384:	ff 1f       	adc	r31, r31
 386:	a2 17       	cp	r26, r18
 388:	b3 07       	cpc	r27, r19
 38a:	e4 07       	cpc	r30, r20
 38c:	f5 07       	cpc	r31, r21
 38e:	20 f0       	brcs	.+8      	; 0x398 <__udivmodsi4_ep>
 390:	a2 1b       	sub	r26, r18
 392:	b3 0b       	sbc	r27, r19
 394:	e4 0b       	sbc	r30, r20
 396:	f5 0b       	sbc	r31, r21

00000398 <__udivmodsi4_ep>:
 398:	66 1f       	adc	r22, r22
 39a:	77 1f       	adc	r23, r23
 39c:	88 1f       	adc	r24, r24
 39e:	99 1f       	adc	r25, r25
 3a0:	1a 94       	dec	r1
 3a2:	69 f7       	brne	.-38     	; 0x37e <__udivmodsi4_loop>
 3a4:	60 95       	com	r22
 3a6:	70 95       	com	r23
 3a8:	80 95       	com	r24
 3aa:	90 95       	com	r25
 3ac:	9b 01       	movw	r18, r22
 3ae:	ac 01       	movw	r20, r24
 3b0:	bd 01       	movw	r22, r26
 3b2:	cf 01       	movw	r24, r30
 3b4:	08 95       	ret

000003b6 <__muluhisi3>:
 3b6:	0e 94 e6 01 	call	0x3cc	; 0x3cc <__umulhisi3>
 3ba:	a5 9f       	mul	r26, r21
 3bc:	90 0d       	add	r25, r0
 3be:	b4 9f       	mul	r27, r20
 3c0:	90 0d       	add	r25, r0
 3c2:	a4 9f       	mul	r26, r20
 3c4:	80 0d       	add	r24, r0
 3c6:	91 1d       	adc	r25, r1
 3c8:	11 24       	eor	r1, r1
 3ca:	08 95       	ret

000003cc <__umulhisi3>:
 3cc:	a2 9f       	mul	r26, r18
 3ce:	b0 01       	movw	r22, r0
 3d0:	b3 9f       	mul	r27, r19
 3d2:	c0 01       	movw	r24, r0
 3d4:	a3 9f       	mul	r26, r19
 3d6:	70 0d       	add	r23, r0
 3d8:	81 1d       	adc	r24, r1
 3da:	11 24       	eor	r1, r1
 3dc:	91 1d       	adc	r25, r1
 3de:	b2 9f       	mul	r27, r18
 3e0:	70 0d       	add	r23, r0
 3e2:	81 1d       	adc	r24, r1
 3e4:	11 24       	eor	r1, r1
 3e6:	91 1d       	adc	r25, r1
 3e8:	08 95       	ret

000003ea <_exit>:
 3ea:	f8 94       	cli

000003ec <__stop_program>:
 3ec:	ff cf       	rjmp	.-2      	; 0x3ec <__stop_program>
